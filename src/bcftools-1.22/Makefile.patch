diff --git a/src/bcftools-1.22/Makefile b/src/bcftools-1.22/Makefile
index 335f310..1abb039 100644
--- a/src/bcftools-1.22/Makefile
+++ b/src/bcftools-1.22/Makefile
@@ -26,7 +26,7 @@ CC       = gcc
 AR       = ar
 RANLIB   = ranlib
 CPPFLAGS =
-CFLAGS   = -g -Wall -O2
+CFLAGS   = -g -Wall -O2 -fPIC
 LDFLAGS  =
 LIBS     =
 
@@ -43,8 +43,9 @@ OBJS     = main.o vcfindex.o tabix.o \
            mpileup.o bam2bcf.o bam2bcf_indel.o bam2bcf_iaux.o bam2bcf_edlib.o \
 	       read_consensus.o bam_sample.o \
            vcfsort.o cols.o extsort.o dist.o abuf.o \
-           ccall.o em.o prob1.o kmin.o str_finder.o gff.o edlib.o \
-           mpileup2/mpileup.o
+           ccall.o em.o prob1.o kmin.o str_finder.o gff.o edlib.o
+           #mpileup2/mpileup.o
+
 PLUGIN_OBJS = vcfplugin.o
 
 prefix      = /usr/local
@@ -86,7 +87,7 @@ ALL_LIBS     = -lz $(DL_LIBS) $(LIBS)
 all: $(PROGRAMS) $(TEST_PROGRAMS) plugins
 
 EXTRA_CPPFLAGS =
-GSL_LIBS       =
+GSL_LIBS       = @GSL_LIBS@
 
 # On windows, plugins need to be fully linked.  This adds the extra libraries
 # needed.  Defined here so config.mk can override it.
@@ -95,7 +96,7 @@ W32_PLUGIN_LIBS = libbcftools.a $(HTSLIB_DLL) $(ALL_LIBS)
 # Usually config.mk and config.h are generated by running configure
 # or config.status, but if those aren't used create defaults here.
 config.mk:
-	@sed -e '/^prefix/,/^PLUGIN_EXT/d;s/@Hsource@//;s/@Hinstall@/#/;s#@HTSDIR@#htslib-1.22#g;s/@HTSLIB_CPPFLAGS@/-I$$(HTSDIR)/g;' config.mk.in > $@
+	@sed -e '/^prefix/,/^PLUGIN_EXT/d;s/@Hsource@//;s/@Hinstall@/#/;s#@HTSDIR@#../htslib#g;s/@HTSLIB_CPPFLAGS@/-I$$(HTSDIR)/g;' config.mk.in > $@
 
 config.h:
 	echo '/* Basic config.h generated by Makefile */' > $@
@@ -106,7 +107,7 @@ endif
 
 include config.mk
 
-PACKAGE_VERSION = 1.22
+PACKAGE_VERSION = 1.21
 
 # If building from a Git repository, replace $(PACKAGE_VERSION) with the Git
 # description of the working tree: either a release tag with the same value
@@ -148,7 +149,21 @@ ifdef USE_GPL
         GSL_LIBS += -lgsl -lcblas
     endif
 endif
-
+#---- R
+# find all the RBCFLIB .c files in this dir
+RBCFLIB_SRCS := $(wildcard *.RBCFLIB.c)
+# remove polysomy.RBCFLIB.c peakfit.RBCFLIB.c in case USE_GPL is not set
+ifndef USE_GPL
+	RBCFLIB_SRCS := $(filter-out polysomy.RBCFLIB.c peakfit.RBCFLIB.c, $(RBCFLIB_SRCS))
+endif
+# remove polysomy.RBCFLIB.c peakfit.RBCFLIB.c in case USE_GPL is set
+ifdef USE_GPL
+	RBCFLIB_SRCS := $(filter-out polysomy.RBCFLIB.c, $(RBCFLIB_SRCS))
+endif
+# turn them into .o targets
+RBCFLIB_OBJS := $(patsubst %.RBCFLIB.c,%.RBCFLIB.o,$(RBCFLIB_SRCS))
+$(RBCFLIB_OBJS): $(OBJS)
+#---- R
 print-%:
 	@echo '$*=$($*)'
 
@@ -194,6 +209,11 @@ libbcftools.a: $(OBJS)
 	$(AR) -rc $@ $(OBJS)
 	-$(RANLIB) $@
 
+libRbcftools.a: $(RBCFLIB_OBJS)
+	@-rm -f $@
+	$(AR) -rc $@ $(RBCFLIB_OBJS)
+	-$(RANLIB) $@
+
 vcfplugin.o: EXTRA_CPPFLAGS += -DPLUGINPATH='"$(pluginpath)"'
 
 %.dll: %.c version.h version.c libbcftools.a $(HTSLIB_DLL)
@@ -205,6 +225,8 @@ vcfplugin.o: EXTRA_CPPFLAGS += -DPLUGINPATH='"$(pluginpath)"'
 %.so: %.c version.h version.c
 	$(CC) $(PLUGIN_FLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(EXTRA_CPPFLAGS) $(LDFLAGS) -o $@ version.c $< $(LIBS)
 
+# rbcflib.so plugins version
+
 -include $(PLUGINM)
 
 test check: test-plugins
@@ -243,7 +265,6 @@ bam_sample_h = bam_sample.h $(htslib_sam_h)
 cigar_state_h = cigar_state.h $(htslib_hts_h) $(htslib_sam_h)
 read_consensus_h = read_consensus.h $(htslib_hts_h) $(htslib_sam_h)
 str_finder_h = str_finder.h utlist.h
-mpileup2_mpileup_h = mpileup2/mpileup.h $(htslib_sam_h)
 
 str_finder.o: str_finder.c $(str_finder_h) utlist.h
 main.o: main.c $(htslib_hts_h) config.h version.h $(bcftools_h)
@@ -288,14 +309,14 @@ cols.o: cols.c cols.h
 regidx.o: regidx.c $(htslib_hts_h) $(htslib_kstring_h) $(htslib_kseq_h) $(htslib_khash_str2int_h) regidx.h
 consensus.o: consensus.c $(htslib_vcf_h) $(htslib_kstring_h) $(htslib_synced_bcf_reader_h) $(htslib_kseq_h) $(htslib_bgzf_h) regidx.h $(bcftools_h) rbuf.h $(filter_h) $(smpl_ilist_h)
 mpileup.o: mpileup.c $(htslib_sam_h) $(htslib_faidx_h) $(htslib_kstring_h) $(htslib_khash_str2int_h) $(htslib_hts_os_h) regidx.h $(bcftools_h) $(bam2bcf_h) $(bam_sample_h) $(gvcf_h)
-mpileup2/mpileup.o: mpileup2/mpileup.c $(htslib_hts_h) $(htslib_sam_h) $(htslib_faidx_h) regidx.h $(mpileup2_mpileup_h) $(bam_sample_h)
+mpileup2/mpileup.o: mpileup2/mpileup.h mpileup2/mpileup.c $(htslib_sam_h) $(htslib_faidx_h) $(htslib_kstring_h) $(htslib_khash_str2int_h) $(htslib_hts_os_h) $(bcftools_h) $(bam2bcf_h) $(bam_sample_h)
 bam2bcf.o: bam2bcf.c $(htslib_hts_h) $(htslib_sam_h) $(htslib_kstring_h) $(htslib_kfunc_h) $(bam2bcf_h) mw.h
 bam2bcf_indel.o: bam2bcf_indel.c $(htslib_hts_h) $(htslib_sam_h) $(htslib_khash_str2int_h) $(bam2bcf_h) $(htslib_ksort_h) $(str_finder_h)
 bam2bcf_iaux.o: bam2bcf_iaux.c $(htslib_hts_h) $(htslib_sam_h) $(htslib_khash_str2int_h) $(bcftools_h) $(bam2bcf_h) $(htslib_ksort_h) $(read_consensus_h) $(cigar_state_h)
 bam2bcf_edlib.o: bam2bcf_edlib.c $(htslib_hts_h) $(htslib_sam_h) $(htslib_khash_str2int_h) $(bam2bcf_h) $(str_finder_h) $(htslib_ksort_h) edlib.h
 read_consensus.o: read_consensus.c $(read_consensus_h) $(cigar_state_h) $(bcftools_h) kheap.h
 bam_sample.o: bam_sample.c $(htslib_hts_h) $(htslib_kstring_h) $(htslib_khash_str2int_h) $(khash_str2str_h) $(bam_sample_h) $(bcftools_h)
-version.o: version.c $(htslib_hts_h) $(bcftools_h) version.h
+version.o: version.h version.c
 hclust.o: hclust.c $(htslib_hts_h) $(htslib_kstring_h) $(bcftools_h) hclust.h
 HMM.o: HMM.c $(htslib_hts_h) HMM.h
 vcfbuf.o: vcfbuf.c $(htslib_vcf_h) $(htslib_vcfutils_h) $(htslib_hts_os_h) $(htslib_kbitset_h) $(bcftools_h) $(vcfbuf_h) rbuf.h
@@ -305,7 +326,8 @@ extsort.o: extsort.c $(bcftools_h) extsort.h kheap.h
 smpl_ilist.o: smpl_ilist.c $(bcftools_h) $(smpl_ilist_h)
 gff.o: gff.c $(htslib_hts_h) $(htslib_khash_h)  $(htslib_khash_str2int_h) $(htslib_kseq_h) $(htslib_bgzf_h) $(bcftools_h) gff.h regidx.h
 csq.o: csq.c $(htslib_hts_h) $(htslib_vcf_h) $(htslib_synced_bcf_reader_h) $(htslib_khash_h) $(htslib_khash_str2int_h) $(htslib_kseq_h) $(htslib_faidx_h) $(htslib_bgzf_h) $(bcftools_h) $(filter_h) regidx.h kheap.h $(smpl_ilist_h) rbuf.h gff.h
-
+# for compiling the bcftools.RBCLIB c includes
+bcftools.RBCFLIB.o: bcftools.RBCFLIB.c
 # test programs
 
 # For tests that might use it, set $REF_PATH explicitly to use only reference
@@ -360,7 +382,7 @@ install: $(PROGRAMS) $(PLUGINS)
 	$(INSTALL_PROGRAM) plugins/*$(PLUGIN_EXT) $(DESTDIR)$(plugindir)
 
 clean: testclean clean-plugins
-	-rm -f gmon.out *.o mpileup2/*.o *.a *~ $(PROGRAMS) version.h
+	-rm -f gmon.out *.o *.a *~ $(PROGRAMS) version.h
 	-rm -rf *.dSYM test/*.dSYM
 
 clean-plugins:
@@ -389,4 +411,4 @@ force:
 
 .PHONY: all check check-all clean clean-all clean-plugins
 .PHONY: distclean distclean-all force install
-.PHONY: print-version tags test test-all testclean testclean-all plugins docs
+.PHONY: print-version tags test test-all testclean testclean-all plugins docs
\ No newline at end of file
