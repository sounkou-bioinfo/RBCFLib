#!/usr/bin/env Rscript

# DownloadGenomes - CLI wrapper for DownloadHumanReferenceGenomes function
# This script provides a command-line interface to download human reference
# genomes through the RBCFLib package's DownloadHumanReferenceGenomes function.

# Load RBCFLib
if (!requireNamespace("RBCFLib", quietly = TRUE)) {
    cat("Error: RBCFLib package is required but not installed\n", file = stderr())
    cat("Please install the package using: install.packages('RBCFLib')\n", file = stderr())
    quit(status = 1)
}

suppressPackageStartupMessages(library(RBCFLib))

# Display help information
ShowHelp <- function() {
    cat("DownloadGenomes - CLI for downloading human reference genomes using RBCFLib\n\n")
    cat("Usage: DownloadGenomes [options]\n\n")
    cat("Options:\n")
    cat("  --grch37-dir=DIR      Directory to store GRCh37 reference (default: ~/GRCh37)\n")
    cat("  --grch38-dir=DIR      Directory to store GRCh38 reference (default: ~/GRCh38)\n")
    cat("  --cytoband            Also download cytoband files\n")
    cat("  --chain               Also download chain files for liftover\n")
    cat("  --genomes             Download genome FASTA files (default behavior)\n")
    cat("  --grch37-fasta=URL    URL for GRCh37 FASTA (optional)\n")
    cat("  --grch38-fasta=URL    URL for GRCh38 FASTA (optional)\n")
    cat("  --method=METHOD       Download method: 'wget', 'curl', 'auto', 'internal', 'libcurl', or 'lynx' (default: 'wget')\n")
    cat("  --extra=ARG           Extra command-line arguments for 'wget' or 'curl' methods. For multiple arguments, use\n")
    cat("                        comma-separated values, e.g., '--extra=-C,on' for wget's continue feature\n")
    cat("  --help                Display this help message\n\n")
    cat("This tool downloads and indexes the GRCh37 and GRCh38 human reference genomes\n")
    cat("using the DownloadHumanReferenceGenomes function from RBCFLib.\n")
}

# Parse command line arguments
args <- commandArgs(trailingOnly = TRUE)

if (length(args) == 0 || "--help" %in% args || "-h" %in% args) {
    ShowHelp()
    quit(status = 0)
}

# Initialize parameters with defaults
grch37_dir <- file.path(Sys.getenv("HOME"), "GRCh37")
grch38_dir <- file.path(Sys.getenv("HOME"), "GRCh38")
cytoband <- FALSE
chain <- FALSE
genomes <- TRUE # Default is to download genomes
custom_urls <- list()
method <- "wget" # Default download method
extra <- NULL # Extra command-line arguments for download methods

# Check for "--" standalone argument which is often a mistake
if ("--" %in% args) {
    cat("Warning: Standalone '--' argument detected. This is likely a typo.\n", file = stderr())
    cat("If you meant to use an option like '--genomes', make sure there's no space after '--'.\n", file = stderr())
}

# Parse named arguments
for (arg in args) {
    if (arg == "--") {
        # Skip the standalone dash-dash argument
        next
    } else if (grepl("^--grch37-dir=", arg)) {
        grch37_dir <- sub("^--grch37-dir=", "", arg)
    } else if (grepl("^--grch38-dir=", arg)) {
        grch38_dir <- sub("^--grch38-dir=", "", arg)
    } else if (arg == "--cytoband") {
        cytoband <- TRUE
    } else if (arg == "--chain") {
        chain <- TRUE
    } else if (arg == "--genomes") {
        genomes <- TRUE
    } else if (grepl("^--grch37-fasta=", arg)) {
        custom_urls$grch37_fasta <- sub("^--grch37-fasta=", "", arg)
    } else if (grepl("^--grch38-fasta=", arg)) {
        custom_urls$grch38_fasta <- sub("^--grch38-fasta=", "", arg)
    } else if (grepl("^--grch37-cytoband=", arg)) {
        custom_urls$grch37_cytoband <- sub("^--grch37-cytoband=", "", arg)
    } else if (grepl("^--grch38-cytoband=", arg)) {
        custom_urls$grch38_cytoband <- sub("^--grch38-cytoband=", "", arg)
    } else if (grepl("^--grch37-chain=", arg)) {
        custom_urls$grch37_chain <- sub("^--grch37-chain=", "", arg)
    } else if (grepl("^--grch38-chain-18=", arg)) {
        custom_urls$grch38_chain_18 <- sub("^--grch38-chain-18=", "", arg)
    } else if (grepl("^--grch38-chain-19=", arg)) {
        custom_urls$grch38_chain_19 <- sub("^--grch38-chain-19=", "", arg)
    } else if (grepl("^--method=", arg)) {
        method <- sub("^--method=", "", arg)
        valid_methods <- c("wget", "curl", "auto", "internal", "libcurl", "lynx")
        if (!method %in% valid_methods) {
            cat("Warning: Invalid download method '", method, "'. Valid options are: ",
                paste(valid_methods, collapse = ", "), "\n",
                file = stderr()
            )
            cat("Using default method 'wget' instead.\n", file = stderr())
            method <- "wget"
        }
    } else if (grepl("^--extra=", arg)) {
        # Split comma-separated extra arguments and convert to a character vector
        extra_arg <- sub("^--extra=", "", arg)
        extra <- strsplit(extra_arg, ",")[[1]]
    }
}

# Display configuration
cat("Downloading human reference genomes with the following settings:\n")
cat("  GRCh37 directory: ", grch37_dir, "\n")
cat("  GRCh38 directory: ", grch38_dir, "\n")
cat("  Download genome FASTA files: ", ifelse(genomes, "Yes", "No"), "\n")
cat("  Download cytoband files: ", ifelse(cytoband, "Yes", "No"), "\n")
cat("  Download chain files: ", ifelse(chain, "Yes", "No"), "\n")
cat("  Download method: ", method, "\n")
if (!is.null(extra)) {
    cat("  Extra download arguments: ", paste(extra, collapse = " "), "\n")
}

# Call the function with specified arguments
tryCatch(
    {
        # Only pass custom URLs if provided, otherwise omit the parameter to use the defaults
        # Prepare the function arguments
        func_args <- list(
            grch37_dir = grch37_dir,
            grch38_dir = grch38_dir,
            cytoband = cytoband,
            chain = chain,
            method = method
        )

        # Add custom URLs if provided
        if (length(custom_urls) > 0) {
            func_args$urls <- custom_urls
        }

        # Add extra arguments if provided
        if (!is.null(extra)) {
            func_args$extra <- extra
        }

        # Call the function with all the arguments
        result <- do.call(RBCFLib::DownloadHumanReferenceGenomes, func_args)

        # Display results
        cat("\nDownload completed successfully!\n")
        cat("Files downloaded:\n")
        cat("  GRCh37 FASTA: ", result$grch37_fasta, "\n")
        cat("  GRCh37 FAI: ", result$grch37_fai, "\n")
        cat("  GRCh38 FASTA: ", result$grch38_fasta, "\n")
        cat("  GRCh38 FAI: ", result$grch38_fai, "\n")

        if (!is.null(result$cytoband)) {
            cat("  GRCh37 Cytoband: ", result$cytoband$grch37, "\n")
            cat("  GRCh38 Cytoband: ", result$cytoband$grch38, "\n")
        }

        if (!is.null(result$chain)) {
            cat("  GRCh37 Chain: ", result$chain$grch37, "\n")
            cat("  GRCh38 Chain (hg18): ", result$chain$grch38_18, "\n")
            cat("  GRCh38 Chain (hg19): ", result$chain$grch38_19, "\n")
        }
    },
    error = function(e) {
        cat("Error downloading reference genomes:\n", e$message, "\n", file = stderr())
        quit(status = 1)
    }
)
