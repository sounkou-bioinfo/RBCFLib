% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BCFToolsPipe.R
\name{BCFToolsPipe}
\alias{BCFToolsPipe}
\title{Pipe two BCFTools commands together}
\usage{
BCFToolsPipe(
  command1,
  args1 = character(),
  command2,
  args2 = character(),
  catchStdout = TRUE,
  catchStderr = TRUE,
  saveStdout = NULL
)
}
\arguments{
\item{command1}{A character string specifying the first bcftools command}

\item{args1}{A character vector of arguments for the first command}

\item{command2}{A character string specifying the second bcftools command}

\item{args2}{A character vector of arguments for the second command}

\item{catchStdout}{Logical; whether to capture standard output from the second command (default: TRUE)}

\item{catchStderr}{Logical; whether to capture standard error from both commands (default: TRUE)}

\item{saveStdout}{Character; file path where to save standard output, or NULL (default: NULL)}
}
\value{
A named list with elements:
\describe{
\item{status}{Integer vector with exit statuses of both commands (0 for success, non-zero for errors)}
\item{stdout}{Character vector of captured standard output lines from the second command, or NULL if not captured}
\item{stderr}{Character vector of captured standard error lines from both commands, or NULL if not captured}
\item{command}{Character vector representing the full piped bcftools command invoked}
}
}
\description{
Executes two bcftools commands in a piped sequence, where the output of the first command
is used as input for the second command, similar to the Unix pipe operator (|).
}
\examples{
\dontrun{
# Convert VCF to BCF and back to VCF
vcfFile <- system.file("exdata", "imputed.gt.vcf.gz", package = "RBCFLib")
result <- BCFToolsPipe("view", c("-Ob", vcfFile), "view", c("-Ov"))

# Filter VCF then remove headers
BCFToolsPipe("view", c("-i", "'DP>30'", vcfFile), "view", c("-H"))

# View a region then filter by some criteria and save to a file
outFile <- tempfile(fileext = ".vcf")
BCFToolsPipe("view", c("-r", "1:1000-2000", vcfFile),
             "view", c("-i", "'QUAL>20'"), 
             saveStdout = outFile)
}

}
